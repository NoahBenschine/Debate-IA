import React,{useState} from "react"

import { Container, Row, Col } from 'react-bootstrap';
import Head from "next/head"
import Link from "next/link"
import Box from '@mui/material/Box';
import Button from '@mui/material/Button';
import TextField from '@mui/material/TextField';
import styles from "../../styles/Admin.module.css";
import {getSession, useSession } from "next-auth/react";
import $ from 'jquery';
export default function Main(){
const [input,setInputStates] = useState({changeTopic:"",addAdmin:"",setTime:""})
  const { data: session} = useSession();
  console.log(session);




  async function changeCurrentDebate(new_topic){
    const response = await fetch("/api/db/Calls/adminHandler", {
      method: "POST",
      body: JSON.stringify({topic_name:new_topic,user:session.user.name}),
      headers: { adminMethod: "changeDebate" }
    })
    const agreement = response.text();
    agreement.then((result) => {
      console.log(result)
    })
  }



function handleChange(event){
  console.log(event.target);
    const { name, value } = event.target;
  setInputStates(prevState=>{
    if (name === "changeTopic") {
       return {
        changeTopic:value,
        addAdmin:prevState.addAdmin,
        setTime:prevState.setTime
       };
     } else if (name === "addAdmin") {
       return {
         changeTopic:prevState.changeTopic,
         addAdmin:value,
         setTime:prevState.setTime
       };
     } else if (name === "setTime") {
       return {
         changeTopic:prevState.changeTopic,
         addAdmin:prevState.addAdmin,
         setTime:value
       };
     }

})
console.log(input);
}
console.log(input);
  return(
     <div className={styles.container}>
    <Head>
    <title>Create Next App</title>
    <meta name="description" content="Generated by create next app" />
    <link
     rel="stylesheet"
     href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css"
     integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU"
      crossOrigin="anonymous"
    />
    </Head>

       <Box className={styles.Box}
       sx={{color:"#fff"}}
         component="form"
         noValidate
         autoComplete="off"
       >

       <Button onClick={voteWinner} className={styles.EndVoting} variant="contained" size="large">
       End Voting
       </Button>
         <TextField  className={styles.box_tf} id="outlined-basic" label="Outlined" value={input.changeTopic} variant="outlined" name="changeTopic" onChange={handleChange} onKeyPress={(e)=>{

           if (e.key === "Enter"){
              changeCurrentDebate(input.changeTopic);
           }
         }} />
         <TextField  className={styles.box_tf} sx={{color:"#fff"}} color="secondary" id="outlined-basic" label="Outlined" variant="outlined" value={input.addAdmin} name="addAdmin" onChange={handleChange} onKeyPress={(e)=>{

           if (e.key === "Enter"){
              addAdmin(input.addAdmin);
           }
         }} />
         <TextField   className={styles.box_tf} sx={{color:"#fff"}} id="outlined-basic" type="datetime-local" label="Outlined" variant="outlined" value={input.setTime} name="setTime" onChange={handleChange} onKeyPress={(e)=>{

           if (e.key === "Enter"){
             console.log("enter was pressed");
              setTime(input.setTime);
           }
         }}/>
       </Box>

   <Link href="/choosing/main" passHref><Button className={styles.leaveAdminButton} sx={{
     fontFamily: "Helvetica",
      fontSize: 24,
      fontWeight: "bold",
     color: "#fff",
     backgroundColor: "#f5ba13"

    }} size="lg">Choose Side!</Button></Link>

   </div>
  )
}

//
// if(typeof window !== 'undefined') {
//
//   var add_admin = document.getElementById("add_admin");
//
//   // Execute a function when the user releases a key on the keyboard
//   add_admin.addEventListener("keyup", function(event) {
//     // Number 13 is the "Enter" key on the keyboard
//     if (event.keyCode === 13) {
//   console.log(event);
//     }
//   });
//
// }

  async function voteWinner() {
    const response = await fetch("/api/db/Calls/voteHandler", {
      method: "GET",
      headers: { voteMethod: "selectWinner" }
    })
    const agreement = response.json();
    agreement.then((result) => {
      console.log(result)
    })
  }


  async function addAdmin(new_admin){
    const response = await fetch("/api/db/Calls/adminHandler", {
      method: "POST",
      body: JSON.stringify({name:new_admin}),
      headers: { adminMethod: "addAdmin" }
    })
    const agreement = response.text();
    agreement.then((result) => {
      console.log(result)
    })
  }

  async function setTime(new_time){
    const response = await fetch("/api/db/Calls/adminHandler", {
      method: "POST",
      body: JSON.stringify({time:new_time}),
      headers: { adminMethod: "changeDebateTime" }
    })
    const agreement = response.text();
    agreement.then((result) => {
      console.log(result)
    })
  }
